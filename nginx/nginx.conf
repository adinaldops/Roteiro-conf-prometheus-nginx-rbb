http {                                
    # Bloco de servidor para acessar interface web do Prometheus
    server {
        listen 443 ssl;                                                   # Escuta na porta 443 (HTTPS)
        server_name 192.168.35.131;                                       # Nome do servidor/IP (adapta para seu Ambiente) 
        ssl_protocols TLSv1.2 TLSv1.3;                                    # Define os protocolos TLS permitidos
        ssl_certificate /etc/nginx/certs/certificado.crt;                 # Caminho do certificadoo(não necessariamente precisa ser o certificado  disponibilizado para as Oraganizãções, poder ser certificado da sua prorpia instituição)
        ssl_certificate_key /etc/nginx/certs/chave-privada.key;           # Caminho da chave do certificado
        ssl_verify_depth 3;                                               # Nível de verificação da cadeia de certificados
        location / {                                                      # Bloco de localização para a interface web do Prometheus
            proxy_pass http://prometheus:9090/;                           # Proxy para o Prometheus na porta 9090
            proxy_redirect off;                                           # Desativa redirecionamento de proxy
            proxy_set_header Host $host;                                  # Define cabeçalho Host
            proxy_set_header X-Real-IP $remote_addr;                      # Define cabeçalho X-Real-IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Define cabeçalho X-Forwarded-For
            proxy_set_header X-Forwarded-Proto $scheme;                   # Define cabeçalho X-Forwarded-Proto
            # Headers de segurança
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always; # Ativa HSTS
            add_header X-Content-Type-Options "nosniff" always;                                # Evita sniffing de tipo de conteúdo
            add_header X-Frame-Options "DENY" always;                                          # Bloqueia frames para prevenção de clickjacking
            # Autenticação básica para a interface web
            auth_basic "Restricted Access";                                                    # Título para autenticação básica
            auth_basic_user_file /etc/nginx/.htpasswd;                                         # Caminho do arquivo de autenticação
        }
    }
    # Bloco de servidor para scraping de métricas da instituições com mTLS (nesse bloco deve ser configurado o certificado gerado e os disponibbilizado pelas Organizações)
    server {
        listen 8443 ssl;                                                                     # Escuta na porta 8443 (HTTPS) para scraping
        server_name 192.168.35.131;                                                          # Nome do servidor/IP(adapta para seu ambiente)
        ssl_protocols TLSv1.2 TLSv1.3;                                                       # Define os protocolos TLS permitidos
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';             #Define os algoritmos de cifra
        ssl_prefer_server_ciphers on;                                                        # Prefere os cifradores do servidor
        ssl_certificate /etc/nginx/certs/certificado.crt;                                    # Caminho do certificado do servidor que foi gerado (esse certificado deve ser disponibilizado no Git (https://github.com/RBBNet/participantes/tree/main/lab/certificados)  para as outras intituições)
        ssl_certificate_key /etc/nginx/certs/chave-privada.key;                              # Caminho da chave do certificado do servidor
        ssl_client_certificate /etc/nginx/certs/client.crt;                                  # Caminho dos certificados das Organizações 
        ssl_verify_client on;                                                                # Ativa mTLS (mutual TLS)
        ssl_verify_depth 0;                                                                  # Define a profundidade de verificação de certificados (como o certificado é autoassinado o valor deve ser 0)
        
        location /federate {                                                                 # Bloco de localização para o endpoint de scraping
            proxy_pass http://prometheus:9090/federate;                                      # Proxy para o endpoint federate do Prometheus
            proxy_set_header Host $host;                                                     # Define cabeçalho Host
            proxy_set_header X-Real-IP $remote_addr;                                         # Define cabeçalho X-Real-IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;                     # Define cabeçalho X-Forwarded-For
            proxy_set_header X-Forwarded-Proto $scheme;                                      # Define cabeçalho X-Forwarded-Proto
            # Headers de segurança
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always; # Ativa HSTS
            add_header X-Content-Type-Options "nosniff" always;                                # Evita sniffing de tipo de conteúdo
            add_header X-Frame-Options "DENY" always;                                          # Bloqueia frames para prevenção de clickjacking
            
        }
    }
}
events {}                                

